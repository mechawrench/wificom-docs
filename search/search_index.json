{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the WiFiCom Documentation","text":""},{"location":"#discord","title":"Discord","text":""},{"location":"#whats-a-wificom","title":"What's a WiFiCom?","text":"<ul> <li>Like a D-Com/A-Com, but controlled via WiFi instead of USB.<ul> <li>Premade battery-powered WiFiComs are available, giving freedom from cables!</li> <li>The basic DIY instructions provided on this site are for a WiFiCom powered over micro USB.</li> </ul> </li> <li>Supports:<ul> <li>All Digimon V-Pets currently supported by the D-Com/A-Com</li> <li>Infrared Digimon: iC, Twin, Data Link, Fusion Loader</li> <li>D-Scanner barcodes via infrared</li> <li>Magical Witches</li> <li>Legendz Talispod and Talisdam.</li> </ul> </li> <li>Apps can connect over WiFi, including w0rld and NacaBattle.</li> <li>Serial mode uses USB serial in the same way an A-Com, for use with apps that don't support WiFi yet.</li> <li>Punchbag mode provides standalone operation, with configurable DigiROMs.</li> <li>Realtime online battles for Pendulum X/Accel/iC/Mini and Legendz Talisdam/Talispod, via the WiFiCom website.</li> <li>Open-source server provides an HTTP API for easy app development, including web apps and iOS.</li> <li>If you ever wanted to code your own V-Pet, this is a beginner-friendly hardware platform using CircuitPython (or Arduino could be used with more effort and no infrared support).</li> </ul>"},{"location":"#first-steps","title":"First Steps","text":"<p>Obtain a WiFiCom by either building or buying a premade unit from a reputable maker.</p> <ul> <li>DIY Build</li> <li>Buy Premade</li> </ul> <p>Once you have a WiFiCom, you can begin to configure it and connect to your first App.</p> <ul> <li>Device Setup</li> <li>App Setup</li> </ul>"},{"location":"app_list/","title":"Compatible Apps","text":""},{"location":"app_list/#w0rld","title":"w0rld","text":"<p>WiFi is supported! See w0rld Integration. Also works in serial mode.</p>"},{"location":"app_list/#digiwificom","title":"DigiWiFiCom","text":"<p>iOS app by N3evin with a collection of DigiROMs to send over WiFi.</p>"},{"location":"app_list/#nacabattle","title":"NacaBattle","text":"<p>WiFi is supported!</p>"},{"location":"app_list/#alpha-terminal-and-serial","title":"Alpha Terminal and Serial","text":"<p>Working with WiFiCom in serial mode, on all supported platforms.</p>"},{"location":"app_list/#a-com-wiki","title":"A-Com Wiki","text":"<p>Working with WiFiCom in serial mode.</p>"},{"location":"app_setup/","title":"App Setup","text":"<p>General instructions for any WiFiCom app. See w0rld Integration for w0rld-specific instructions.</p> <ol> <li>Ensure you have completed Device Setup</li> <li>Go to the API Keys section on the website</li> <li>Find the entry for the app you wish to use</li> <li>Click Get New API Key</li> <li>Return to the app itself</li> <li>When prompted by the app, provide the API Key and the device name of your WiFiCom</li> <li>If your WiFiCom has a speaker, you should hear a beep when it receives a DigiROM from the app</li> </ol> <p>For apps which only support serial, instead put the WiFiCom into Serial Mode.</p>"},{"location":"buy_premade/","title":"Buy Premade","text":"<p>Please visit the Digimon 0NL1NE server and look for the channel <code>#request-premade-com-unit</code> to ask about buying premade WiFiCom units.</p>"},{"location":"config_files/","title":"Config Files","text":"<p>These files can be edited, and should normally be retained between updates. We may introduce breaking changes to these files that are required to run the software - please check the release notes for any changes to these files.</p>"},{"location":"config_files/#secretsjson","title":"secrets.json","text":"<p>(<code>secrets.py</code> on v1.x firmware)</p> <p>Contains credentials for connecting to your WiFi network and the server. Recommended to download from <code>wificom.dev</code>, but can also be filled out from <code>secrets.example.json</code>.</p>"},{"location":"config_files/#configjson","title":"config.json","text":"<p>Contains non-secret configuration options.</p> <ul> <li>\"sound_on\": <code>true</code> or <code>false</code></li> </ul> <p><code>config.py</code> on v1.x firmware: also contained the DigiROMs for the punchbag menu. Check the comments in the file for details.</p>"},{"location":"config_files/#digiromstxt","title":"digiroms.txt","text":"<p>Contains the DigiROMs for the punchbag menu. Check the comments in the file for details.</p>"},{"location":"config_files/#board_configpy","title":"board_config.py","text":"<p>Describes the hardware configuration of the board. You only need to edit this if using an unsupported board or custom circuit layout. Check the comments in the file for details.</p>"},{"location":"credits/","title":"Credits","text":"<ul> <li>BrassBolt - Co-Creator of the WiFiCom Project, initial Proof of Concept for idea, web service (author, host, and maintainer), long-time primary contributor to the WiFiCom project.</li> <li>BladeSabre - Creator of the library WiFiCom was created based on (find the project at dmcomm-python), co-creator of the WiFiCom project, original circuit design for both P-Com and WiFiCom components.  Long-time primary contributor to the WiFiCom project.</li> <li>Xanthos - First to implement a premade fully featured WiFiCom device for other users, long term supporter of the project.  Heavily involved in testing operations for the WiFiCom project.  Much feedback since inception on the hardware level for the WiFiCom device.</li> <li>ManicBen - Vast source of knowledge and experience to the project, original direction for use of the Mosquitto protocol.</li> <li>Nizuma(zojo) - Guru of all things Legendz, original support for the project when implementing and testing Legendz.  First seller of WiFiCom breadboard builds to the public, these were made using our first well-supported microcontroller, the Nano Connect.</li> <li>N3evin - Author of DigiWiFiCom app. Information and feedback regarding battery support. Minor contribution to wificom-lib code.</li> <li>Seki - Creator of Digimon w0rld, provided for the very first App integration for the WiFiCom project which brought the project forward in a big way.</li> <li>blazeindarkness - Maintainer of the w0rld project, first tester of a premade WiFiCom unit (BrassBolt made).  Continued support for the project and features we wish to have implemented across WiFiCom and the w0rld project.</li> <li>SunSoil || MintMaker - Maintainer of A-Com Wiki, has provided feedback, input, and knowledge-share that aided other WiFiCom projects.</li> <li>SigmaDolphin - Decoded the Legendz signal protocol, this helped to enable Real-Time Battles for Legendz toys.</li> <li>Avi - Drew the WiFiCom logo.</li> <li>If we are missing anyone or anything, please let us know!</li> </ul>"},{"location":"device_setup/","title":"Device Setup","text":""},{"location":"device_setup/#first-steps","title":"First Steps","text":"<ol> <li>Build your WiFiCom or buy a premade unit</li> <li>For DIY units or if you need to update firmware:<ul> <li>Download wificom-update-tool and follow the instructions</li> <li>If you have a premade, you can skip this step (your unit will have current firmware as of time of sale)</li> </ul> </li> </ol>"},{"location":"device_setup/#obtain-secrets","title":"Obtain secrets","text":"<ol> <li>Create an account on wificom.dev</li> <li>Go to the WiFiComs section on the website</li> <li>Click \"New WiFiCom\", enter a device name, then click \"Create\"</li> <li>On your newly created WiFiCom page, scroll down to the \"Credentials Download\" section</li> <li>Recommended: Use the \"Local Only Configurator\" and enter your WiFi network information (this is not shared with wificom.dev). Otherwise you will need to add it to the file after downloading.</li> </ol>"},{"location":"device_setup/#copy-secrets-to-your-wificom","title":"Copy secrets to your WiFiCom","text":"<ol> <li>Connect your WiFiCom to a computer using a data cable</li> <li>Put your WiFiCom into Drive Mode<ul> <li>Up to v1.1.0: found in the main menu</li> <li>v1.2.0+: found in the Settings menu</li> </ul> </li> <li>Copy the secrets file into the drive named CIRCUITPY</li> <li>Safely remove / eject the CIRCUITPY drive from your computer</li> <li>Reboot your WiFiCom<ul> <li>Up to v1.1.0: choose an option from the menu</li> <li>v1.2.0+: hold C to reboot</li> </ul> </li> </ol>"},{"location":"device_user_guide/","title":"Device User Guide","text":""},{"location":"device_user_guide/#wificom-ui","title":"WiFiCom UI","text":"<p>WiFiCom has a small screen and 3 buttons.</p>"},{"location":"device_user_guide/#buttons","title":"Buttons","text":"<ul> <li>Button A: select menu options</li> <li>Button B: activate selected option</li> <li>Button C: cancel/return (needs to be held for several seconds when device is busy)</li> </ul>"},{"location":"device_user_guide/#menu-options","title":"Menu options","text":"<ul> <li>WiFi: Connect to WiFi and MQTT and await instructions from the server</li> <li>Serial: Act as a normal serial com unit</li> <li>Punchbag: Communicate with the toys in a standalone mode (you can edit <code>digiroms.txt</code> to change the available options in this submenu)</li> <li>Settings:<ul> <li>Version Info: Show the version info</li> <li>Sound: Toggle sound ON/OFF.</li> <li>Drive: Make the CIRCUITPY drive writeable so you can edit configuration or update firmware</li> <li>UF2 Bootloader: Activate the RPI-RP2 drive for updating CircuitPython</li> </ul> </li> </ul>"},{"location":"device_user_guide/#led-indicator","title":"LED Indicator","text":"<ul> <li>Raspberry Pi Pico W: external LED on GP10</li> <li>Raspberry Pi Pico: on-board green LED</li> <li>Seeed Xiao RP2040: external LED on A3</li> </ul>"},{"location":"device_user_guide/#led-meanings","title":"LED Meanings","text":"<ul> <li>Blinking indicates connecting to WiFi and MQTT</li> <li>Solid (dimmed) LED indicates connected and no errors</li> <li>Solid (bright) LED indicates waiting for Digimon/Legendz device during real-time battle</li> <li>LED OFF with short blinks indicates a managed failure, follow the instructions on the screen</li> <li>LED OFF indicates failure, please restart your device</li> </ul>"},{"location":"device_user_guide/#button-usage-during-startup","title":"Button Usage During Startup","text":"<ul> <li>To enter \"Dev mode\", connect the USB while holding the C button (the single separate button on P-Coms) and keep holding until the CIRCUITPY drive appears<ul> <li>This means the main program is running with the CIRCUITPY drive writeable</li> <li>On WiFiComs, mainly used for dev, but sometimes useful for recovering from incorrect files</li> <li>On P-Coms, used to edit configuration or update firmware</li> </ul> </li> <li>For WiFiComs with v1.x firmware, the above enters serial mode. To enter \"Dev mode\", start the same way but release the button promptly when the LED comes on</li> </ul>"},{"location":"diy_build/","title":"DIY Build","text":"<p>To build a breadboard WiFiCom, see Parts List and Breadboard Layout.</p>"},{"location":"diy_build/#supported-boards","title":"Supported Boards","text":""},{"location":"diy_build/#wificom","title":"WiFiCom","text":"<ul> <li>Raspberry Pi Pico W</li> </ul> <p>Note: Arduino Nano RP2040 Connect, RP2040+AirLift, and screenless WiFiComs are only supported up to WiFiCom firmware v1.x, and will act as screenless P-Coms in v2.x.</p>"},{"location":"diy_build/#p-com-usb-serial-connection-only","title":"P-Com (USB serial connection only)","text":"<ul> <li>Raspberry Pi Pico</li> <li>Seeed Xiao RP2040</li> <li>Other RP2040 boards are likely to work, but you will need to define pins in <code>board_config.py</code></li> </ul> <p>Note: Screen output on P-Coms is only supported up to WiFiCom firmware v1.x.</p>"},{"location":"diy_build/#schematic","title":"Schematic","text":"<p>Schematic PDF (includes some info for PCB making)</p>"},{"location":"manual_install/","title":"Manual Installation","text":"<p>Most users should use <code>wificom-update-tool</code> as described in Device Setup instead!</p>"},{"location":"manual_install/#circuitpython","title":"CircuitPython","text":"<p><code>wificom-lib</code> runs on CircuitPython. Check the CHANGELOG for the exact version tested with each release.</p> <ul> <li>Raspberry Pi Pico W (WiFiCom)</li> <li>Raspberry Pi Pico (P-Com)</li> <li>Xiao RP2040 (P-Com)</li> </ul>"},{"location":"manual_install/#release-zips","title":"Release Zips","text":"<p>wificom-lib releases bundle all required libraries, and are compiled to <code>mpy</code> format for faster startup.</p>"},{"location":"manual_install/#manual-installation_1","title":"Manual Installation","text":"<ol> <li>Install CircuitPython, checking board and version as above</li> <li>Download the latest release from the releases page, you'll be looking for a file named \"wificom-SOMETHING.zip\" matching your board</li> <li>Extract the zip</li> <li>If you are using an unsupported board or custom circuit layout, modify \"board_config.py\" so the pinouts match your board</li> <li>Copy the files into the root of the CIRCUITPY drive</li> <li>Add secrets, either by modifying the example secrets file, or you can get a prefilled version on wificom.dev</li> <li>Safely remove / eject the CIRCUITPY drive from your computer</li> <li>Cold reboot the WiFiCom (remove and restore power)</li> </ol>"},{"location":"manual_install/#manual-update","title":"Manual Update","text":"<ol> <li>Backup your current files, in particular the following are commonly modified:<ul> <li>secrets.json / secrets.py</li> <li>board_config.py</li> <li>config.json / config.py</li> <li>digiroms.txt</li> </ul> </li> <li>Update CircuitPython if required</li> <li>Put the WiFiCom into drive mode so that the CIRCUITPY drive is writeable</li> <li>Download the latest release from the releases page, named as above</li> <li>Extract the zip</li> <li>Compare contents of your modified files with the new files and make any necessary changes</li> <li>Copy the files into the root of the CIRCUITPY drive</li> <li>Safely remove / eject the CIRCUITPY drive from your computer</li> <li>Reboot the WiFiCom using one of the options indicated</li> </ol>"},{"location":"manual_install/#libraries","title":"Libraries","text":"<p>These are included in the release zip. If installing manually, check <code>sources.json</code> for versions.</p> <ul> <li>dmcomm-python</li> <li>Adafruit CircuitPython Library Bundle<ul> <li>adafruit_minimqtt</li> <li>adafruit_display_text</li> <li>adafruit_displayio_ssd1306</li> <li>adafruit_ticks</li> <li>adafruit_connection_manager</li> </ul> </li> </ul>"},{"location":"manual_install/#server","title":"Server","text":"<p>wificom.dev is open-source. The code is available at:</p> <ul> <li>wificom-webapp</li> <li>wificom-mosquitto-docker</li> </ul>"},{"location":"parts_list/","title":"Parts List","text":"<p>This project is modular, so choose the sections you need.</p>"},{"location":"parts_list/#shipping-from-usa","title":"Shipping from USA","text":"<ul> <li>Most parts are available from DigiKey<ul> <li>Shared Cart</li> <li>Parts in this cart are labelled BASE/PRONG/IR/LEGENDZ - you can delete unneeded items before purchase</li> </ul> </li> <li>Pi Pico W with pre-soldered headers (Amazon)<ul> <li>Can be found cheaper if you're able to solder the headers on</li> </ul> </li> <li>Screen (Amazon)</li> <li>Speaker module (Amazon)</li> <li>TSMP58000 sensor (eBay) - for iC/Twin infrared</li> <li>Xanthos has Legendz connectors for sale (Discord)</li> </ul>"},{"location":"parts_list/#general-parts-info","title":"General Parts Info","text":""},{"location":"parts_list/#wificom-base","title":"WiFiCom base","text":"<ul> <li>Pi Pico W with headers</li> <li>Breadboard: 830 tie points for a full build</li> <li>Breadboard jumper wires<ul> <li>A kit including some short wires is recommended</li> <li>Or, very short connections can be made using legs cut from extra resistors</li> </ul> </li> <li>Visible LED: conventionally orange in this project</li> <li>220R resistor</li> <li>3 small pushbuttons (tactile switch)</li> <li>Screen: 4-pin SSD1306 128x64 OLED module<ul> <li>Note that GND and Vcc are switched on some of these products - check yours carefully!</li> </ul> </li> </ul>"},{"location":"parts_list/#speaker","title":"Speaker","text":"<ul> <li>Passive buzzer module with built-in amplifier and 3 pins for Vcc, GND and signal: recommended for breadboarding</li> <li>See the schematic for a possible alternative circuit<ul> <li>Note: different speakers may need different circuits</li> </ul> </li> </ul>"},{"location":"parts_list/#prong-circuit","title":"Prong circuit","text":"<ul> <li>Resistors: 1 each of 470K, 100K, 6K8, 1K</li> <li>1nF ceramic capacitor</li> <li>Connector to toy e.g. 2 round breadboard jumpers</li> </ul>"},{"location":"parts_list/#ir-led-circuit","title":"IR LED circuit","text":"<ul> <li>(Shared between all IR devices and D-Scanner barcodes)</li> <li>IR LED, 940nm or 950nm<ul> <li>OFL-5102 or LTE-4208 works well</li> </ul> </li> <li>220R resistor</li> </ul>"},{"location":"parts_list/#data-link-and-fusion-loader","title":"Data Link and Fusion Loader","text":"<ul> <li>TSOP4838 IR sensor<ul> <li>Vishay brand recommended - other brands may have issues with Data Link</li> </ul> </li> <li>(Also need the IR LED circuit)</li> </ul>"},{"location":"parts_list/#ictwindigiwindow","title":"iC/Twin/DigiWindow","text":"<ul> <li>TSMP58000 IR sensor<ul> <li>Discontinued - possible replacements are under investigation</li> </ul> </li> <li>(Also need the IR LED circuit)</li> </ul>"},{"location":"parts_list/#talispoddam","title":"Talispod/dam","text":"<ul> <li>1K2 resistor (1%)</li> <li>3K3 resistor (1%)</li> <li>1nF ceramic capacitor</li> <li>Connector to the toy<ul> <li>Note: we can't just stick wires into the prongs as with Digimon</li> <li>Buy a premade connector?</li> <li>Craft a connector?</li> <li>Desolder a Talisdam cord, replace with something else, and use the cord with other toys?</li> </ul> </li> </ul>"},{"location":"picow_breadboard/","title":"Breadboard Layout","text":"<p>Note:</p> <ul> <li>4K7 in this image is replaced with 6K8 (but if you already bought 4K7, that is fine)</li> <li>Bend the IR LED to point in the same direction as the sensors</li> <li>Ideally cut the front IR sensor (TSOP4838) to have shorter legs than the back one</li> <li>Legendz is not shown here</li> <li>GND and Vcc are switched on some screens - check yours carefully - wiring these backwards will destroy the screen instantly!</li> <li>Check the pinout of your speaker module too</li> </ul>"},{"location":"realtime_battles/","title":"Real-Time Battles","text":"<p>We support the following for real-time battles, and these battles happen as if you were really connecting your devices in person.</p>"},{"location":"realtime_battles/#digimon-all-devices-can-battle-one-another-in-the-list","title":"Digimon (all devices can battle one another in the list):","text":"<ul> <li>Pendulum X</li> <li>Mini (not Xros Mini)</li> <li>Accel - choose the \"\u30a8\u30c3\u30af\u30b9\" option (\"X\", second on the list)</li> <li>iC (prongs) - choose the \"\u30a2\u30af\u30bb\u30eb\" option (\"Accel\", second on the list)</li> </ul>"},{"location":"realtime_battles/#legendz-all-devices-can-battle-one-another-in-the-list","title":"Legendz (all devices can battle one another in the list):","text":"<ul> <li>Talispod</li> <li>Talisdam - choose \"\u30c0\u30e0\" (Dam) if battling another Talisdam or \"\u30dd\u30c3\u30c9\" (Pod) if battling a Talispod</li> </ul> <p>Note when battling Talispod vs Talisdam:</p> <ul> <li>You need to remove the outer two soul dolls from the Talisdam.</li> <li>There can be slight discrepancies in damage reported. This is not a bug in WiFiCom, it happens the same way when connecting devices in person.</li> </ul>"},{"location":"realtime_battles/#initial-test","title":"Initial Test","text":"<ol> <li>Ensure you have completed Device Setup.</li> <li>Navigate to the WiFiComs area on the WiFiCom website and open the page for your WiFiCom.</li> <li>Send a DigiROM to your WiFiCom:<ul> <li>Digimon: <code>X1-0159-4379-2E49-@4009</code></li> <li>Talispod: <code>LT1-117800780015050701010202020242F90004016C-AA780022-AA780022-AA780022</code></li> <li>Talisdam: <code>LT1-125900590006050C02030E0E0E02E389000101000A050504010611050502B6-AA590003-AA590003-AA590003</code></li> </ul> </li> <li>Try to battle your device with the WiFiCom. For these DigiROMs, prepare the battle up to the connect screen, connect the device prongs, and wait for the battle to start without pressing any buttons.</li> <li>On Legendz, this only accounts for the first round, so return the reborn switch to cancel the battle when your device asks about attacks for round 2.</li> </ol>"},{"location":"realtime_battles/#battle-instructions","title":"Battle Instructions","text":"<ul> <li>Voice chat is recommended.</li> <li>It helps if your first try is with someone who's done it before. While the group is still small, devs are happy to talk you through it on voice chat - please just ask!</li> <li>Both players connect their WiFiCom to WiFi.</li> <li>Both players navigate to the Realtime Battles area on the WiFiCom website.</li> <li>Host goes to \"Generate Realtime Battle Code\", selects the options, clicks Start, and gives the invite code to guest.</li> <li>Guest enters the code in \"Accept Realtime Battle\" and clicks Start.</li> <li>Use the Retry button if your WiFiCom didn't get the message, or if you have to reboot it after getting the message.</li> <li>Bright LED means it's waiting for you to press the button.</li> <li>For Digimon, host presses the button first and continues to hold the toy against the connector. Guest will get a bright LED and a beep shortly afterwards, and should press the button as soon as possible after this happens.</li> <li>For Legendz, both players press the button at about the same time, and continue to hold the toy against the connector. There will be an error visible - ignore this and keep holding, it takes a while.</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#via-serial","title":"Via Serial","text":"<p>Please use NacaBattle Serial Console for interfacing with serial on your WiFiCom. To see messages that appear on WiFiCom startup, click inside the DigiROM input box and ensure it is empty, press Control-C to stop the program, then Control-D to start it from the beginning.</p> <p>Code with Mu is another option. Choose CircuitPython mode and click the Serial/REPL button. To see messages that appear on WiFiCom startup, press Control-C in the Serial/REPL area to stop the program, then Control-D to start it from the beginning.</p> <p>GNU Screen also works and may be preinstalled on Mac/Linux systems.</p> <p>Arduino IDE is not recommended because it cannot send the Control-C and Control-D characters.</p>"},{"location":"troubleshooting/#log-files","title":"Log Files","text":"<p>If your WiFiCom crashes, note the 3-digit number on the screen, press the button indicated to reboot, then check the CIRCUITPY drive for <code>wificom_log.txt</code>. There should be an entry matching the number you noted earlier.</p>"},{"location":"videos/","title":"WiFiCom videos","text":""},{"location":"videos/#the-digi-dudes-sep-2023","title":"The Digi-Dudes (Sep 2023)","text":"<p>Review and tutorial, including w0rld!</p> <p>Features WiFiCom built by Xanthos - buy on Discord.</p>"},{"location":"w0rld_integration/","title":"w0rld Integration","text":"<p>The w0rld development team has now added WiFiCom to the w0rld game.  This works for all supported platforms that the game runs on.</p>"},{"location":"w0rld_integration/#device-setup","title":"Device Setup","text":"<p>Ensure you have completed Device Setup.</p>"},{"location":"w0rld_integration/#obtain-credentials","title":"Obtain Credentials","text":"<ol> <li>Create an API key: On the API Keys page, click \"Get New API Key\" for w0rld         </li> <li>Copy your API Key and Device Name from the box which appears         </li> </ol>"},{"location":"w0rld_integration/#configure-w0rld","title":"Configure w0rld","text":"<ol> <li>Open w0rld and login, navigate to the settings menu (Gear icon)     </li> <li>Click the WiFiCom \"Configure\" button</li> <li>Enter your WiFiCom API Key when prompted</li> <li>Enter your WiFiCom Device Name when prompted</li> <li>Enable WiFiCom by checking the \"WiFiCom\" checkbox</li> </ol>"},{"location":"w0rld_integration/#play-w0rld","title":"Play w0rld","text":"<ol> <li>Ensure your WiFiCom is connected to WiFi (first menu option)</li> <li>Go ahead and summon as usual, you only need to press the DCom button once now!</li> <li>You can also battle as usual, at this point your WiFiCom should be working, if not, please check you followed every step</li> <li>If your WiFiCom has a speaker, it will beep to let you know when it has received your requests from w0rld</li> </ol>"},{"location":"w0rld_integration/#use-an-a-comd-com","title":"Use an A-Com/D-Com","text":"<p>Simply uncheck the WiFiCom box in the settings menu to use an A-Com/D-Com</p>"},{"location":"w0rld_integration/#use-another-wificom","title":"Use another WiFiCom","text":"<ol> <li>Click the WiFiCom \"Configure\" button again</li> <li>The saved API Key is hidden. If you need to change it, enter a new one when prompted, otherwise continue without editing the text. (You don't need to change this unless you reset it on wificom.dev or you have multiple WiFiCom accounts.)</li> <li>Check/edit the Device Name when prompted.</li> </ol>"}]}