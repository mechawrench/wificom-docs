{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the WiFiCom Documentation","text":""},{"location":"#discord","title":"Discord","text":""},{"location":"#whats-a-wificom","title":"What's a WiFiCom?","text":"<ul> <li>Like a D-Com/A-Com, but controlled via WiFi instead of USB. Currently most WiFiComs are powered over micro USB, but battery power is possible.</li> <li>Supports:<ul> <li>All Digimon V-Pets currently supported by the D-Com/A-Com</li> <li>Infrared Digimon: iC, Twin, Data Link, Fusion Loader</li> <li>D-Scanner barcodes via infrared</li> <li>Legendz Talispod and Talisdam.</li> </ul> </li> <li>w0rld already supports WiFi, with more apps to come.</li> <li>Serial mode uses USB serial in the same way an A-Com, for use with apps that don't support WiFi yet.</li> <li>Punchbag mode provides standalone operation, with configurable DigiROMs.</li> <li>Realtime online battles for Pendulum X/Accel/iC/Mini and Legendz Talisdam/Talispod, via the WiFiCom website.</li> <li>Open-source server provides an HTTP API for easy app development, including web apps and iOS.</li> <li>If you ever wanted to code your own V-Pet, this is a beginner-friendly hardware platform using CircuitPython.</li> </ul>"},{"location":"#first-steps","title":"First Steps","text":"<p>Obtain a WiFiCom by either building or buying a premade unit from a reputable maker.</p> <ul> <li>DIY Build</li> <li>Buy Premade</li> </ul> <p>Once you have a WiFiCom, you can begin to configure it and connect to your first App.</p> <ul> <li>Onboarding a WiFiCom</li> <li>Apps</li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"apps/","title":"Apps","text":""},{"location":"apps/#w0rld","title":"w0rld","text":"<p>WiFi is supported! See w0rld Integration. Also works in serial mode.</p>"},{"location":"apps/#digiwificom","title":"DigiWiFiCom","text":"<p>iOS app by N3evin with a collection of DigiROMs to send over WiFi.</p>"},{"location":"apps/#nacabattle","title":"NacaBattle","text":"<p>WiFi is supported!</p>"},{"location":"apps/#alpha-terminal-and-serial","title":"Alpha Terminal and Serial","text":"<p>Working with WiFiCom in serial mode, on all supported platforms.</p>"},{"location":"apps/#a-com-wiki","title":"A-Com Wiki","text":"<p>Working with WiFiCom in serial mode.</p>"},{"location":"buy_premade/","title":"Buy Premade","text":"<p>Please visit the Digimon 0NL1NE server and look for the channel <code>#request-premade-com-unit</code> to ask about buying premade WiFiCom units.</p>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#_1","title":"Configuration","text":""},{"location":"credentials/","title":"Credentials","text":""},{"location":"credits/","title":"Credits","text":"<ul> <li>BrassBolt - Co-Creator of the WiFiCom Project, initial Proof of Concept for idea, web service (author, host, and maintainer), long-time primary contributor to the WiFiCom project.</li> <li>BladeSabre - Creator of the library WiFiCom was created based on (find the project at dmcomm-python), co-creator of the WiFiCom project, original circuit design for both P-Com and WiFiCom components.  Long-time primary contributor to the WiFiCom project.</li> <li>Xanthos - First to implement a premade fully featured WiFiCom device for other users, long term supporter of the project.  Heavily involved in testing operations for the WiFiCom project.  Much feedback since inception on the hardware level for the WiFiCom device.</li> <li>ManicBen - Vast source of knowledge and experience to the project, original direction for use of the Mosquitto protocol.</li> <li>Nizuma(zojo) - Guru of all things Legendz, original support for the project when implementing and testing Legendz.  First seller of WiFiCom breadboard builds to the public, these were made using our first well-supported microcontroller, the Nano Connect.</li> <li>N3evin - Author of DigiWiFiCom app. Information and feedback regarding battery support. Minor contribution to wificom-lib code.</li> <li>Seki - Creator of Digimon w0rld, provided for the very first App integration for the WiFiCom project which brought the project forward in a big way.</li> <li>blazeindarkness - Maintainer of the w0rld project, first tester of a premade WiFiCom unit (BrassBolt made).  Continued support for the project and features we wish to have implemented across WiFiCom and the w0rld project.</li> <li>SunSoil || MintMaker - Maintainer of A-Com Wiki, has provided feedback, input, and knowledge-share that aided other WiFiCom projects.</li> <li>SigmaDolphin - Decoded the Legendz signal protocol, this helped to enable Real-Time Battles for Legendz toys.</li> <li>If we are missing anyone or anything, please let us know!</li> </ul>"},{"location":"dependencies/","title":"Dependencies","text":"<p><code>wificom-lib</code> runs on CircuitPython 8.x. Check the CHANGELOG for the exact version tested with each release.</p>"},{"location":"dependencies/#libraries","title":"Libraries","text":"<p>These are included in the release zip. If installing manually, check <code>sources.json</code> for versions. In particular, <code>adafruit_minimqtt</code> is likely to break if a different version is used from the one specified.</p> <ul> <li>dmcomm-python</li> <li>adafruit_bus_device</li> <li>adafruit_display_text</li> <li>adafruit_esp32spi</li> <li>adafruit_minimqtt</li> <li>adafruit_displayio_ssd1306</li> <li>adafruit_requests</li> </ul>"},{"location":"dependencies/#server","title":"Server","text":"<p>wificom.dev is open-source. The code is available at:</p> <ul> <li>wificom-webapp</li> <li>wificom-mosquitto-docker</li> </ul>"},{"location":"device_user_guide/","title":"Device User Guide","text":""},{"location":"device_user_guide/#units-with-screen","title":"Units with Screen","text":"<p>The UI has a small screen and 3 buttons.</p>"},{"location":"device_user_guide/#buttons","title":"Buttons","text":"<ul> <li>Button A: select menu options</li> <li>Button B: activate selected option</li> <li>Button C: cancel/return (needs to be held for several seconds when device is busy)</li> </ul>"},{"location":"device_user_guide/#menu-options","title":"Menu options","text":"<ul> <li>WiFi: Connect to WiFi and MQTT and await instructions from the server</li> <li>Serial: Act as a normal serial com unit</li> <li>Punchbag: Communicate with the toys in a standalone mode (you can edit <code>config.py</code> to change the available options in this submenu)</li> <li>Settings:<ul> <li>Version Info: Show the version info</li> <li>Sound: Toggle sound ON/OFF.</li> <li>Drive: Make the CIRCUITPY drive writeable so you can edit configuration or update firmware</li> <li>UF2 Bootloader: Activate the RPI-RP2 drive for updating CircuitPython</li> </ul> </li> </ul>"},{"location":"device_user_guide/#led-indicator","title":"LED Indicator","text":"<ul> <li>Raspberry Pi Pico W: external LED on GP10</li> <li>Raspberry Pi Pico: on-board green LED</li> <li>Seeed Xiao RP2040: external LED on A3</li> </ul>"},{"location":"device_user_guide/#led-meanings","title":"LED Meanings","text":"<ul> <li>Blinking indicates connecting to WiFi and MQTT</li> <li>Solid (dimmed) LED indicates connected and no errors</li> <li>Solid (bright) LED indicates waiting for Digimon/Legendz device during real-time battle</li> <li>LED OFF with short blinks indicates a managed failure, follow the instructions on the screen, or on screenless units press the button to restart</li> <li>LED OFF indicates failure, please restart your device</li> <li>During startup, see below</li> </ul>"},{"location":"device_user_guide/#button-usage-during-startup","title":"Button Usage During Startup","text":"<p>This is the only way to select a mode on units without a screen.</p>"},{"location":"device_user_guide/#wificom-devices","title":"WiFiCom devices","text":"<ul> <li>To use \"WiFiCom mode (with drive read-only)\", do not press the button. On units without a screen, this is mostly equivalent to picking \"WiFi\" from the menu.</li> <li>To use \"WiFiCom mode (with full drive access)\", also known as \"Dev mode\", hold the C button until the LED comes on, then release.</li> <li>To use \"Serial Only mode\", hold the C button until the LED comes on, and keep holding until the LED goes dim or off. This is mostly equivalent to picking \"serial\" from the menu.</li> </ul>"},{"location":"device_user_guide/#p-com-devices","title":"P-Com devices","text":"<ul> <li>To use \"Serial Mode\", do not press the button. This is mostly equivalent to picking \"Serial\" from the menu.</li> <li>To use \"Dev Mode\", hold the C button until the LED comes on (does not matter when the button is released). If you do not have a LED, hold the C button until the CIRCUITPY drive appears.</li> </ul>"},{"location":"diy_build/","title":"DIY Build","text":"<p>To build a breadboard WiFiCom, see Parts List and Breadboard Layout.</p>"},{"location":"diy_build/#supported-boards","title":"Supported Boards","text":""},{"location":"diy_build/#wificom","title":"WiFiCom","text":"<ul> <li>Raspberry Pi Pico W</li> </ul> <p>Note: Arduino Nano Connect and RP2040+AirLift are likely to stop working in a future update.</p>"},{"location":"diy_build/#p-com-usb-serial-connection-only","title":"P-Com (USB serial connection only)","text":"<ul> <li>Raspberry Pi Pico</li> <li>Seeed Xiao RP2040</li> <li>Other RP2040 boards are likely to work, but you will need to define pins in <code>board_config.py</code></li> </ul>"},{"location":"diy_build/#schematic","title":"Schematic","text":"<p>Schematic PDF (includes some info for PCB making)</p>"},{"location":"editable_files/","title":"Editable Files","text":"<p>These files can be edited, but you must retain the changes between updates.  We may introduce breaking changes to these files that are required to run the software.  Please be sure to check the release notes for any changes to these files.</p>"},{"location":"editable_files/#secretspy","title":"secrets.py","text":""},{"location":"editable_files/#digiromspy","title":"digiroms.py","text":""},{"location":"editable_files/#board_configpy","title":"board_config.py","text":""},{"location":"onboarding_wificom/","title":"Onboarding a WiFiCom","text":""},{"location":"parts_list/","title":"Parts List","text":"<p>This project is modular, so choose the sections you need.</p>"},{"location":"parts_list/#shipping-from-usa","title":"Shipping from USA","text":"<ul> <li>Most parts are available from DigiKey<ul> <li>Shared Cart</li> <li>Parts in this cart are labelled BASE/PRONG/IR/LEGENDZ - you can delete unneeded items before purchase</li> </ul> </li> <li>Pi Pico W with pre-soldered headers (Amazon)<ul> <li>Can be found cheaper if you're able to solder the headers on</li> </ul> </li> <li>Screen (Amazon)</li> <li>Speaker module (Amazon)</li> <li>TSMP58000 sensor (eBay) - for iC/Twin infrared</li> <li>Xanthos has Legendz connectors for sale (Discord)</li> </ul>"},{"location":"parts_list/#general-parts-info","title":"General Parts Info","text":""},{"location":"parts_list/#wificom-base","title":"WiFiCom base","text":"<ul> <li>Pi Pico W with headers</li> <li>Breadboard: 830 tie points for a full build</li> <li>Breadboard jumper wires<ul> <li>A kit including some short wires is recommended</li> <li>Or, very short connections can be made using legs cut from extra resistors</li> </ul> </li> <li>Visible LED: conventionally orange in this project</li> <li>220R resistor</li> <li>3 small pushbuttons (tactile switch)</li> <li>Screen: 4-pin SSD1306 128x64 OLED module<ul> <li>Note that GND and Vcc are switched on some of these products - check yours carefully!</li> </ul> </li> </ul>"},{"location":"parts_list/#speaker","title":"Speaker","text":"<ul> <li>Passive buzzer module with built-in amplifier and 3 pins for Vcc, GND and signal: recommended for breadboarding</li> <li>See the schematic for a possible alternative circuit<ul> <li>Note: different speakers may need different circuits</li> </ul> </li> </ul>"},{"location":"parts_list/#prong-circuit","title":"Prong circuit","text":"<ul> <li>Resistors: 1 each of 470K, 100K, 6K8, 1K</li> <li>1nF ceramic capacitor</li> <li>Connector to toy e.g. 2 round breadboard jumpers</li> </ul>"},{"location":"parts_list/#ir-led-circuit","title":"IR LED circuit","text":"<ul> <li>(Shared between all IR devices and D-Scanner barcodes)</li> <li>IR LED, 940nm or 950nm<ul> <li>OFL-5102 or LTE-4208 works well</li> </ul> </li> <li>220R resistor</li> </ul>"},{"location":"parts_list/#data-link-and-fusion-loader","title":"Data Link and Fusion Loader","text":"<ul> <li>TSOP4838 IR sensor<ul> <li>Vishay brand recommended - other brands may have issues with Data Link</li> </ul> </li> <li>(Also need the IR LED circuit)</li> </ul>"},{"location":"parts_list/#ictwindigiwindow","title":"iC/Twin/DigiWindow","text":"<ul> <li>TSMP58000 IR sensor<ul> <li>Discontinued - possible replacements are under investigation</li> </ul> </li> <li>(Also need the IR LED circuit)</li> </ul>"},{"location":"parts_list/#talispoddam","title":"Talispod/dam","text":"<ul> <li>1K2 resistor (1%)</li> <li>3K3 resistor (1%)</li> <li>1nF ceramic capacitor</li> <li>Connector to the toy<ul> <li>Note: we can't just stick wires into the prongs as with Digimon</li> <li>Buy a premade connector?</li> <li>Craft a connector?</li> <li>Desolder a Talisdam cord, replace with something else, and use the cord with other toys?</li> </ul> </li> </ul>"},{"location":"picow_breadboard/","title":"Breadboard Layout","text":"<p>Note:</p> <ul> <li>4K7 in this image is replaced with 6K8 (but if you already bought 4K7, that is fine)</li> <li>Bend the IR LED to point in the same direction as the sensors</li> <li>Ideally cut the front IR sensor (TSOP4838) to have shorter legs than the back one</li> <li>Legendz is not shown here</li> <li>GND and Vcc are switched on some screens - check yours carefully - wiring these backwards will destroy the screen instantly!</li> <li>Check the pinout of your speaker module too</li> </ul>"},{"location":"power_options/","title":"Power Options","text":""},{"location":"realtime_battles/","title":"Realtime-Battles","text":""},{"location":"realtime_battles/#digimon","title":"Digimon","text":""},{"location":"realtime_battles/#legendz","title":"Legendz","text":""},{"location":"resources/","title":"Resources","text":""},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"upgrading_software/","title":"Upgrading Software","text":"<ol> <li>Backup your current files, in particular the following are commonly modified:<ul> <li>secrets.py</li> <li>board_config.py</li> <li>config.py (previously digiroms.py)</li> </ul> </li> <li>Update CircuitPython if required</li> <li>Put the WiFiCom into drive mode so that the CIRCUITPY drive is writeable</li> <li>Download the latest release from releases page, you'll be looking for a file named \"wificom-lib_RELEASEVERSION.zip\"</li> <li>Extract the zip and copy the contents into the root of the CIRCUITPY drive</li> <li>Compare contents of your modified files with the new files and make any necessary changes</li> <li>Test that everything works, including connecting to WiFi and sending/receiving DigiRoms</li> </ol>"},{"location":"w0rld_integration/","title":"w0rld Integration","text":"<p>The w0rld development team has now added WiFiCom to the w0rld game.  This works for all supported platforms that the game runs on.</p>"},{"location":"w0rld_integration/#obtain-credentials","title":"Obtain Credentials","text":"<ol> <li>Create an API key: On the API Keys page, click \"Get New API Key\" for w0rld         </li> <li>Copy your API Key and Device Name from the box which appears         </li> </ol>"},{"location":"w0rld_integration/#configure-w0rld","title":"Configure w0rld","text":"<ol> <li>Open w0rld and login, navigate to the settings menu (Gear icon)     </li> <li>Click the WiFiCom \"Configure\" button</li> <li>Enter your WiFiCom API Key when prompted</li> <li>Enter your WiFiCom Device Name when prompted</li> <li>Enable WiFiCom by checking the \"WiFiCom\" checkbox</li> </ol>"},{"location":"w0rld_integration/#play-w0rld","title":"Play w0rld","text":"<ol> <li>Ensure your WiFiCom is connected to WiFi (first menu option)</li> <li>Go ahead and summon as usual, you only need to press the DCom button once now!</li> <li>You can also battle as usual, at this point your WiFiCom should be working, if not, please check you followed every step</li> <li>If your WiFiCom has a speaker, it will beep to let you know when it has received your requests from w0rld</li> </ol>"},{"location":"w0rld_integration/#use-an-a-comd-com","title":"Use an A-Com/D-Com","text":"<p>Simply uncheck the WiFiCom box in the settings menu to use an A-Com/D-Com</p>"},{"location":"w0rld_integration/#use-another-wificom","title":"Use another WiFiCom","text":"<ol> <li>Click the WiFiCom \"Configure\" button again</li> <li>The saved API Key is hidden. If you need to change it, enter a new one when prompted, otherwise continue without editing the text. (You don't need to change this unless you reset it on wificom.dev or you have multiple WiFiCom accounts.)</li> <li>Check/edit the Device Name when prompted.</li> </ol>"}]}